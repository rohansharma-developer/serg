#!/bin/bash

# Statements formatting  
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'
YELLOW='\033[1;33m'

print_messege() {
  echo -ne "$1$2${NC}"
}

# Compatibility check 
check() {
  # init check 
  if [[ ! -e /etc/systemd ]]; then
    print_messege $GREEN "Error: The current system is not equipied with systemd \n"
    exit 0;
  fi
  # Distro check 
  if [[ -e /etc/yum.repos.d ]]; then
   distro=rhel
  elif [[ -e /etc/sources.d ]]; then
    distro=debian
  elif [[ -e /etc/pacman.d ]]; then
    distro=arch
  else
    distro=other
    # print_messege $YELLOW "Warning: Distro might not be supported \n"
  fi
}
create-service() {
  # Service details input
   read -p "Name of service: " sname
   read -p "Description: " sdesc
   read -p "Start After: " safter
   read -p "Type: " stype
   read -p "Auto Restart: (always/no) " srest
   read -p "Command to execute: " sexec
   read -p "User to start service: " suser
   read -p "Wanted by: " swant
   print "Select a directory to store the service file: "
   print "1. /usr/lib/systemd/system"
   print "2. /etc/systemd/system"
   print "3. /etc/systemd/user"
   read -p "Option: " dir_choice

    $dir = ""
   if [[ $dir_choice -eq 1 ]]
   then
    $dir = "/usr/lib/systemd"
   elif [[ $dir_choice -eq 2 ]]
   then
    $dir = "/etc/systemd/system"
   elif [[ $dir_choice -eq 3 ]]
   then
    $dir = "/etc/systemd/user"


  # Creating service file
   echo "
   [Unit]
  Description=$sdesc
  After=$safter
  StartLimitIntervalSec=0
  [Service]
  Type=$stype
  Restart=$srest
  RestartSec=1
  User=$suser
  ExecStart=$sexec

  [Install]
  WantedBy=$swant
   " >> ${dir}/$sname.service

   sudo systemctl enable --now $sname.service
   sudo systemctl status $sname.service
}

while [[ $# -gt 0 ]]
do
  case $1 in 
  --help | -h)
    print_messege $NC "HELP IS ON THE WAY \n"
    ;;
  --version | -v)
    print_messege $NC "beta \n"
    ;;
  --create-service | -c)
    
    ;;
  *)
    print_messege $RED "Error: Invalid flag $1 \n "
    ;;
  esac
  shift
done
 
